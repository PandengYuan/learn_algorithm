class MyCircularDeque {
    int elementNum;
    int[] arr;
    int front;
    int end;

    public MyCircularDeque(int k) {
        arr = new int[k];
        elementNum = 0;
        front = 0;
        end = 0;
    }
    
    public boolean insertFront(int value) {
        if(isFull()) return false;

        if(!isEmpty()){
            if(front == 0){
                front = arr.length-1;
            }else{
                front--;
            }
        }else{
            end = front;
        }
        arr[front] = value;
        elementNum++;
        
        return true;
    }
    
    public boolean insertLast(int value) {
        if(isFull()) return false;

        if(!isEmpty()){
            if(end == arr.length-1){
                end = 0;
            }else{
                end++;
            }
        }else{
            front = end;
        }
        arr[end] = value;
        elementNum++;
        
        return true;
    }
    
    public boolean deleteFront() {
        if(isEmpty()) return false;

        if(front == arr.length-1){
            front = 0;
        }else{
            front++;
        }

        elementNum--;
        return true;
    }
    
    public boolean deleteLast() {
        if(isEmpty()) return false;

        if(end == 0){
            end = arr.length-1;
        }else{
            end--;
        }

        elementNum--;
        return true;
    }
    
    public int getFront() {
        if(isEmpty()) return -1;
        return arr[front];
    }
    
    public int getRear() {
        if(isEmpty()) return -1;
        return arr[end];
    }
    
    public boolean isEmpty() {
        if(elementNum == 0) return true;
        return false;
    }
    
    public boolean isFull() {
        if(elementNum == arr.length) return true;
        return false;
    }
}

/**
 * Your MyCircularDeque object will be instantiated and called as such:
 * MyCircularDeque obj = new MyCircularDeque(k);
 * boolean param_1 = obj.insertFront(value);
 * boolean param_2 = obj.insertLast(value);
 * boolean param_3 = obj.deleteFront();
 * boolean param_4 = obj.deleteLast();
 * int param_5 = obj.getFront();
 * int param_6 = obj.getRear();
 * boolean param_7 = obj.isEmpty();
 * boolean param_8 = obj.isFull();
 */